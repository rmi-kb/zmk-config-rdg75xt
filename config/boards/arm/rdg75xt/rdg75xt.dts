/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
	model = "rdg75xt";
	compatible = "rdg75xt";

	chosen {
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,display = &nice_view;
		zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
		zmk,battery = &vbatt;
	};
 
	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";
		diode-direction = "col2row";

        debounce-press-ms = <1>;
		debounce-release-ms = <5>;

		row-gpios
			= <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1  0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1  3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1  1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0  9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
		col-gpios
			= <&gpio0 10 GPIO_ACTIVE_HIGH>
			, <&shift_reg  0 GPIO_ACTIVE_HIGH>
			, <&shift_reg  7 GPIO_ACTIVE_HIGH>
			, <&shift_reg  6 GPIO_ACTIVE_HIGH>
			, <&shift_reg  5 GPIO_ACTIVE_HIGH>
			, <&shift_reg  4 GPIO_ACTIVE_HIGH>
			, <&shift_reg  3 GPIO_ACTIVE_HIGH>
			, <&shift_reg  2 GPIO_ACTIVE_HIGH>
			, <&shift_reg  1 GPIO_ACTIVE_HIGH>
			, <&gpio0 23 GPIO_ACTIVE_HIGH>
			, <&shift_reg 15 GPIO_ACTIVE_HIGH>
			, <&shift_reg 14 GPIO_ACTIVE_HIGH>
			, <&shift_reg 13 GPIO_ACTIVE_HIGH>
			, <&shift_reg 12 GPIO_ACTIVE_HIGH>
			, <&shift_reg 11 GPIO_ACTIVE_HIGH>
            , <&shift_reg 10 GPIO_ACTIVE_HIGH>
            , <&shift_reg  8 GPIO_ACTIVE_HIGH>
			;
	};

	default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <17>;
        rows = <6>;
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0,15) RC(0,16)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13) RC(1,14) RC(1,15) RC(1,16)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13) RC(2,14) RC(2,15) RC(2,16)
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13)          RC(3,15) RC(3,16)
RC(4,0) RC(4,1) RC(4,2)         RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11) RC(4,12) RC(4,13) RC(4,14) RC(4,15)
RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4)                         RC(5,8)                           RC(5,12) RC(5,13) RC(5,14) RC(5,15) RC(5,16)
        >;
    };

	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&encoder>;
	};

	encoder: encoder_left {
		compatible = "alps,ec11";
		label = "LEFT_ENCODER";
		a-gpios = <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		resolution = <2>;
	};

	vbatt: vbatt {
		compatible = "zmk,battery-voltage-divider";
		label = "BATTERY";
		io-channels = <&adc 7>;
		output-ohms = <2000000>;
		full-ohms = <(2000000 + 806000)>;
	};
};

&adc {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};
&usbd {
	status = "okay";
};

nice_view_spi: &spi1 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    mosi-pin = <47>; // P1.15
    sck-pin =  <45>; // P1.13
    miso-pin = <46>; // P1.14, unused

    cs-gpios = <&gpio0 21 GPIO_ACTIVE_LOW>, <&gpio0 2 GPIO_ACTIVE_HIGH>;
    shift_reg: 595@0 {
        compatible = "zmk,gpio-595";
        status = "okay";
        gpio-controller;
        spi-max-frequency = <200000>;
        reg = <0>;
        label = "4HC595";
		#gpio-cells = <2>;
        ngpios = <16>;
    };

	nice_view: ls0xx@1 {
		compatible = "sharp,ls0xx";
		label = "DISPLAY";
		spi-max-frequency = <1000000>;
		reg = <1>;
		width = <160>;
		height = <68>;
	};
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "softdevice";
			reg = <0x00000000 0x00026000>;
		};
		code_partition: partition@26000 {
			label = "code_partition";
			reg = <0x00026000 0x000c6000>;
		};

		/*
		 * The flash starting at 0x000ec000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@ec000 {
			label = "storage";
			reg = <0x000ec000 0x00008000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};